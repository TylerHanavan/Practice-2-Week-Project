package me.maffew.commands;

import me.maffew.arenas.Arena;
import me.maffew.practice.Main;
import me.maffew.utils.Message;
import org.bukkit.Location;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

import java.util.Scanner;

public class SetArena implements CommandExecutor {

    private Main plugin;

    public SetArena(Main p, Arena a) {
        this.plugin = p;
        Arena arena = a;
    }

    public boolean onCommand(CommandSender sender, Command cmd, String s, String[] args) {
        if(sender instanceof Player) {
            Player p = (Player) sender;
            if(cmd.getName().equalsIgnoreCase("arena")) {
                if(args[0] == null) {
                    //Message.send(p, CURRENT ARENA);
                    Message.send(p, "&bCreate arena : /arena <create/remove> <name>");
                    Message.send(p, "&bSet arena : /arena set <name> <x/y/z>");
                } else if(args[0].equalsIgnoreCase("create") && args[1] == null) {
                    Message.send(p, "&bCreate arena : /arena <create/remove> <name>");
                } else if(args[0].equalsIgnoreCase("remove") && args[1] == null) {
                    Message.send(p, "&bCreate arena : /arena <create/remove> <name>");
                } else if(args[0].equalsIgnoreCase("create")){
                    String arenaName = args[1];
                    if(plugin.arenas.contains(arenaName)) {
                        Message.send(p, "&bAn arena under that name has already been created.");
                    } else {
                        playerLocArenaSave(p, args[1]);
                    }
                } else if(args[0].equalsIgnoreCase("remove")) {
                    String arenaName = args[1];
                    if(!plugin.arenas.contains(arenaName)) {
                        Message.send(p, "&bThere is no arena with that name stored.");
                    } else {
                        removeArena(p, arenaName);
                    }
                }
            }
        }

        return false;
    }

    private void playerLocArenaSave(Player p, String arenaName) {
        Location loc = p.getLocation();
        int x = loc.getBlockX();
        int y = loc.getBlockY();
        int z = loc.getBlockZ();
        String worldName = p.getWorld().getName();

        plugin.arenas.set("arena." + arenaName, null);
        plugin.arenas.set("arena." + arenaName + ".x", x);
        plugin.arenas.set("arena." + arenaName + ".y", y);
        plugin.arenas.set("arena." + arenaName + ".z", z);

        Message.send(p, "&bArena " + arenaName + " has been set.");
    }

    private void removeArena(Player p, String arenaName) {
        plugin.arenas.set("arena." + arenaName + ".x", null);
        plugin.arenas.set("arena." + arenaName + ".y", null);
        plugin.arenas.set("arena." + arenaName + ".z", null);

        Message.send(p, "&bArena " + arenaName + " has been cleared.");
    }
}
